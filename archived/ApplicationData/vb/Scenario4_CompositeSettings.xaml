<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<Page x:Class="ApplicationDataSample.CompositeSettings" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="using:ApplicationDataSample" xmlns:common="using:SDKTemplate.Common" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">
  <Grid x:Name="LayoutRoot" HorizontalAlignment="Left" VerticalAlignment="Top">
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="*"/>
    </Grid.RowDefinitions>
    <Grid x:Name="Input" Grid.Row="0">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>
      <TextBlock TextWrapping="Wrap" Grid.Row="0" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left">
         Composite settings are used to group multiple settings. It is useful
        for storing related settings or settings that always get changed
        together. Note that these are treated as one atomic unit during roaming
        conflict resolution. 
        <LineBreak/>
        <LineBreak/>
         Use 
        <Bold>Storage.ApplicationData.current.roamingSettings</Bold>
         and 
        <Bold>Windows.Storage.ApplicationDataCompositeValue</Bold>
         to read, write, and delete a composite setting. 
      </TextBlock>
      <StackPanel Orientation="Vertical" Margin="0,10,0,0" Grid.Row="1">
        <Button x:Name="WriteCompositeSetting" Content="Write composite setting" Margin="0,0,10,0" Click="WriteCompositeSetting_Click"/>
        <Button x:Name="DeleteCompositeSetting" Content="Delete composite setting" Margin="0,0,10,0" Click="DeleteCompositeSetting_Click"/>
      </StackPanel>
    </Grid>
    <Grid x:Name="Output" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1">
      <TextBlock x:Name="OutputTextBlock" Text="No Output available." TextWrapping="Wrap" Grid.Row="0" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left"/>
    </Grid>
    <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts -->
    <VisualStateManager.VisualStateGroups>
      <VisualStateGroup>
        <VisualState x:Name="DefaultLayout"/>
        <VisualState x:Name="Below768Layout"/>
      </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>
  </Grid>
</Page>