<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// This code is licensed under the MIT License (MIT).
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<Page
    x:Class="SDKTemplate.Scenario1_ProvisionTPM"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SDKTemplate"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid x:Name="RootGrid" Margin="12,20,12,12">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <StackPanel Margin="0,0,0,10">
                <TextBlock Text="Description:" Style="{StaticResource SampleHeaderTextStyle}"/>
                <TextBlock Style="{StaticResource ScenarioDescriptionTextStyle}" TextWrapping="Wrap">
                    Create a TPM virtual smart card to exercise the scenarios in this sample.  Use the fields below to specify a friendly name and PIN policy, and then click Create.
                </TextBlock>
            </StackPanel>

            <ScrollViewer Grid.Row="1" VerticalScrollMode="Auto" VerticalScrollBarVisibility="Auto">
                <StackPanel Orientation="Vertical" VerticalAlignment="Top">
                    <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                        <TextBlock Name="FriendlyNameLabel" Text="Friendly Name" TextWrapping="Wrap" HorizontalAlignment="Left" VerticalAlignment="Center" Width="85"/>
                        <!-- Always give a TextBox a name that's accessible to a screen reader. In this case,
                             reference the labeling TextBlock to have the accessible name set on the TextBox. -->
                        <TextBox x:Name="FriendlyName" Text="My Virtual Smart Card" HorizontalAlignment="Left"
                            AutomationProperties.LabeledBy="{Binding ElementName=FriendlyNameLabel}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                        <TextBlock Name="PinMinLengthLabel" Text="Minimum PIN length" TextWrapping="Wrap" HorizontalAlignment="Left" VerticalAlignment="Center" Width="85"/>
                        <TextBox x:Name="PinMinLength" InputScope="Number" Text="8" HorizontalAlignment="Left"
                            AutomationProperties.LabeledBy="{Binding ElementName=PinMinLengthLabel}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                        <TextBlock Name="PinMaxLengthLabel" Text="Maximum PIN length" TextWrapping="Wrap" HorizontalAlignment="Left" VerticalAlignment="Center" Width="85"/>
                        <TextBox x:Name="PinMaxLength" InputScope="Number" Text="127" HorizontalAlignment="Left"
                            AutomationProperties.LabeledBy="{Binding ElementName=PinMaxLengthLabel}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                        <TextBlock Text="Character Set" HorizontalAlignment="Left" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                        <TextBlock Name="PinUppercaseLabel" Text="Uppercase" TextWrapping="Wrap" HorizontalAlignment="Left" VerticalAlignment="Center" Width="85"/>
                        <!-- Always give a ComboBox a name that's accessible to a screen reader. In this case,
                             reference the labeling TextBlock to have the accessible name set on the ComboBox. -->
                        <ComboBox x:Name="PinUppercase" SelectedIndex="1" HorizontalAlignment="Left" VerticalAlignment="Center"
                            AutomationProperties.LabeledBy="{Binding ElementName=PinUppercaseLabel}">
                            <x:String>Disallowed</x:String>
                            <x:String>Allowed</x:String>
                            <x:String>Require At Least One</x:String>
                        </ComboBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                        <TextBlock Name="PinLowercaseLabel" Text="Lowercase" TextWrapping="Wrap" HorizontalAlignment="Left" VerticalAlignment="Center" Width="85"/>
                        <ComboBox x:Name="PinLowercase" SelectedIndex="1" HorizontalAlignment="Left" VerticalAlignment="Center"
                            AutomationProperties.LabeledBy="{Binding ElementName=PinLowercaseLabel}">
                            <x:String>Disallowed</x:String>
                            <x:String>Allowed</x:String>
                            <x:String>Require At Least One</x:String>
                        </ComboBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                        <TextBlock Name="PinDigitsLabel" Text="Digits" TextWrapping="Wrap" HorizontalAlignment="Left" VerticalAlignment="Center" Width="85"/>
                        <ComboBox x:Name="PinDigits" SelectedIndex="1" HorizontalAlignment="Left" VerticalAlignment="Center"
                            AutomationProperties.LabeledBy="{Binding ElementName=PinDigitsLabel}">
                            <x:String>Disallowed</x:String>
                            <x:String>Allowed</x:String>
                            <x:String>Require At Least One</x:String>
                        </ComboBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                        <TextBlock Name="PinSpecialLabel" Text="Special" TextWrapping="Wrap" HorizontalAlignment="Left" VerticalAlignment="Center" Width="85"/>
                        <ComboBox x:Name="PinSpecial" SelectedIndex="1" HorizontalAlignment="Left" VerticalAlignment="Center"
                            AutomationProperties.LabeledBy="{Binding ElementName=PinSpecialLabel}">
                            <x:String>Disallowed</x:String>
                            <x:String>Allowed</x:String>
                            <x:String>Require At Least One</x:String>
                        </ComboBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                        <Button x:Name="Create" Content="Create" Margin="85,0,0,0" Click="Create_Click"/>
                    </StackPanel>
                </StackPanel>
            </ScrollViewer>
        </Grid>
    </Grid>
</Page>
